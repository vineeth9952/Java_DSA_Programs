import java.util.* ;
public class Graph
{
    int vertices;
    List<List<Integer>> adjList ;
    Graph(int v)
    {
        this.vertices = v;
        adjList = new ArrayList<>();
        for(int i=0;i<this.vertices ;i++)
        {
            adjList.add(new LinkedList<>());
        }
    }
    public void addEdge(int src, int dest)
    {
        adjList.get(src).add(dest);
        adjList.get(dest).add(src);
    }
    public void DFS(int startVertex)
    {
        boolean[] visited = new boolean[this.vertices];
        this.DFSUtil(startVertex, visited);
    }
    public void DFSUtil(int vertex, boolean[] visited)
    {
        visited[vertex] = true;
        System.out.print(vertex+" ");
        
        for(int adj: adjList.get(vertex))
        {
            if(visited[adj]==false)
            {
                DFSUtil(adj, visited);
            }
        }
    }
	public static void main(String[] args) 
	{
		Graph g = new Graph(5);
		
		g.addEdge(0,1);
		g.addEdge(0,2);
		g.addEdge(0,3);
		g.addEdge(1,4);
		g.addEdge(2,4);
		g.addEdge(3,4);
		
		g.DFS(3);
		
	}
}
